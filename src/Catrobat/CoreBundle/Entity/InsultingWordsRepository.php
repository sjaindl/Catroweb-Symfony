<?php

namespace Catrobat\CoreBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query;

/**
 * ProgramRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class InsultingWordsRepository extends EntityRepository
{


  public function contains($array)
  {
    $qb = $this->createQueryBuilder('e');
    $qb->select($qb->expr()->count('e.word'))
      ->where($qb->expr()->in('e.word',array('?1')))
      ->setParameter(1,$array);
    $result = $qb->getSingleScalarResult();
    return $result > 0;
  }


//
//  public function getMostDownloadedPrograms($limit = null, $offset = null)
//  {
//    //return $this->findBy(array(),array('downloads' => 'desc'), $limit, $offset);
//  	return $this->createQueryBuilder('e')
//  	->select('e')
//  	->orderBy('e.downloads', 'DESC')
//  	->setFirstResult($offset)
//  	->setMaxResults($limit)
//  	->getQuery()
//  	->getResult();
//  }
//
//  public function getMostViewedPrograms($limit = null, $offset = null)
//  {
//    //return $this->findBy(array(),array('views' => 'desc'), $limit, $offset);
//    return $this->createQueryBuilder('e')
//    ->select('e')
//    ->orderBy('e.views', 'DESC')
//    ->setFirstResult($offset)
//    ->setMaxResults($limit)
//    ->getQuery()
//    ->getResult();
//  }
//
//  public function getRecentPrograms($limit = null, $offset = null)
//  {
//    //return $this->findBy(array(),array('uploaded_at' => 'desc'), $limit, $offset);
//    return $this->createQueryBuilder('e')
//    ->select('e')
//    ->orderBy('e.uploaded_at', 'DESC')
//    ->setFirstResult($offset)
//    ->setMaxResults($limit)
//    ->getQuery()
//    ->getResult();
//  }
//
//  public function search($query, $limit=10, $offset=0)
//  {
//    $query = '%'.$query.'%';
//    $qb_program = $this->createQueryBuilder('e');
//    $weighting = "((CASE WHEN e.name LIKE ?1 THEN 10 ELSE 0 END) + (CASE WHEN f.username LIKE ?1 THEN 1 ELSE 0 END) + (CASE WHEN e.description LIKE ?1 THEN 3 ELSE 0 END))";
//    $q2 = $qb_program->getEntityManager()->createQuery("SELECT e, ".$weighting." AS weight FROM Catrobat\CoreBundle\Entity\Program e LEFT JOIN e.user f WHERE ".$weighting." > 0 ORDER BY weight DESC, e.uploaded_at DESC");
//    $q2->setFirstResult($offset);
//    $q2->setMaxResults($limit);
//    $q2->setParameter(1, $query);
//    $result = $q2->getResult();
//    $result = array_column($result,0);
//    return $result;
//  }
//
//  public function searchCount($query)
//  {
//    $query = '%'.$query.'%';
//    $qb_program = $this->createQueryBuilder('e');
//    $weighting = "((CASE WHEN e.name LIKE ?1 THEN 10 ELSE 0 END) + (CASE WHEN f.username LIKE ?1 THEN 1 ELSE 0 END) + (CASE WHEN e.description LIKE ?1 THEN 3 ELSE 0 END))";
//    $q2 = $qb_program->getEntityManager()->createQuery("SELECT COUNT(e.id) FROM Catrobat\CoreBundle\Entity\Program e LEFT JOIN e.user f WHERE ".$weighting." > 0 ");
//    $q2->setParameter(1, $query);
//    $result = $q2->getSingleScalarResult();
//    return $result;
//  }
//
//  public function getTotalPrograms()
//  {
//    $qb_program = $this->createQueryBuilder('e');
//    $q2 = $qb_program->getEntityManager()->createQuery("SELECT COUNT(e.id) FROM Catrobat\CoreBundle\Entity\Program e");
//    $result = $q2->getSingleScalarResult();
//    return $result;
//  }
}
